<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.htl.dao.ExampaperhistoryviewDao">
    <resultMap id="BaseResultMap" type="com.htl.pojo.domain.Exampaperhistoryview">
        <result column="eid" jdbcType="INTEGER" property="eid"/>
        <result column="qid" jdbcType="INTEGER" property="qid"/>
        <result column="uid" jdbcType="INTEGER" property="uid"/>
        <result column="examPaperName" jdbcType="VARCHAR" property="exampapername"/>
        <result column="question" jdbcType="VARCHAR" property="question"/>
        <result column="typename" jdbcType="VARCHAR" property="typename"/>
        <result column="A" jdbcType="VARCHAR" property="a"/>
        <result column="B" jdbcType="VARCHAR" property="b"/>
        <result column="C" jdbcType="VARCHAR" property="c"/>
        <result column="D" jdbcType="VARCHAR" property="d"/>
        <result column="ans" jdbcType="VARCHAR" property="ans"/>
        <result column="creatperson" jdbcType="VARCHAR" property="creatperson"/>
        <result column="choose" jdbcType="VARCHAR" property="choose"/>
        <result column="time" jdbcType="TIMESTAMP" property="time"/>
    </resultMap>
    <resultMap id="getDoExamPaperHistory" type="com.htl.pojo.domain.Exampaperhistory">
        <result column="eid" jdbcType="INTEGER" property="eid"/>
        <result column="examPaperName" jdbcType="VARCHAR" property="exampapername"/>
        <result column="questionNumber" jdbcType="INTEGER" property="questionNumber"/>
        <result column="creatperson" jdbcType="VARCHAR" property="creatperson"/>
        <result column="time" jdbcType="TIMESTAMP" property="time"/>
    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        eid
        , qid, `uid`, examPaperName, question, typename, `A`, B, `C`, D, ans, creatperson,    choose, `time`
    </sql>

    <select id="getDoPaperHistory" parameterType="com.htl.pojo.User" resultMap="getDoExamPaperHistory">

        SELECT e.`eid`, e.`examPaperName`, COUNT(e.`examPaperName`) AS questionNumber, e.`time`, e.`creatperson`
        FROM exampaperhistoryview e
        WHERE e.`uid` = #{id}
          AND e.`creatperson`=#{username}
        GROUP BY e.`examPaperName`;

    </select>
    <select id="getDoExamHistory" parameterType="com.htl.pojo.User" resultMap="getDoExamPaperHistory">

        SELECT e.`eid`, e.`examPaperName`, COUNT(e.`examPaperName`) AS questionNumber, e.`time`, e.`creatperson`
        FROM exampaperhistoryview e
        WHERE e.`uid` = #{id}
          AND e.`creatperson`!=#{username}
        GROUP BY e.`examPaperName`;

    </select>


    <select id="selectByExample" parameterType="com.htl.pojo.domain.ExampaperhistoryviewExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from exampaperhistoryview
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <delete id="deleteByExample" parameterType="com.htl.pojo.domain.ExampaperhistoryviewExample">
        delete from exampaperhistoryview
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.htl.pojo.domain.Exampaperhistoryview">
        insert into exampaperhistoryview (eid, qid, `uid`,
                                          examPaperName, question, typename,
                                          `A`, B, `C`, D,
                                          ans, creatperson, choose,
                                          `time`)
        values (#{eid,jdbcType=INTEGER}, #{qid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER},
                #{exampapername,jdbcType=VARCHAR}, #{question,jdbcType=VARCHAR}, #{typename,jdbcType=VARCHAR},
                #{a,jdbcType=VARCHAR}, #{b,jdbcType=VARCHAR}, #{c,jdbcType=VARCHAR}, #{d,jdbcType=VARCHAR},
                #{ans,jdbcType=VARCHAR}, #{creatperson,jdbcType=VARCHAR}, #{choose,jdbcType=VARCHAR},
                #{time,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.htl.pojo.domain.Exampaperhistoryview">
        insert into exampaperhistoryview
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="eid != null">
                eid,
            </if>
            <if test="qid != null">
                qid,
            </if>
            <if test="uid != null">
                `uid`,
            </if>
            <if test="exampapername != null">
                examPaperName,
            </if>
            <if test="question != null">
                question,
            </if>
            <if test="typename != null">
                typename,
            </if>
            <if test="a != null">
                `A`,
            </if>
            <if test="b != null">
                B,
            </if>
            <if test="c != null">
                `C`,
            </if>
            <if test="d != null">
                D,
            </if>
            <if test="ans != null">
                ans,
            </if>
            <if test="creatperson != null">
                creatperson,
            </if>
            <if test="choose != null">
                choose,
            </if>
            <if test="time != null">
                `time`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="eid != null">
                #{eid,jdbcType=INTEGER},
            </if>
            <if test="qid != null">
                #{qid,jdbcType=INTEGER},
            </if>
            <if test="uid != null">
                #{uid,jdbcType=INTEGER},
            </if>
            <if test="exampapername != null">
                #{exampapername,jdbcType=VARCHAR},
            </if>
            <if test="question != null">
                #{question,jdbcType=VARCHAR},
            </if>
            <if test="typename != null">
                #{typename,jdbcType=VARCHAR},
            </if>
            <if test="a != null">
                #{a,jdbcType=VARCHAR},
            </if>
            <if test="b != null">
                #{b,jdbcType=VARCHAR},
            </if>
            <if test="c != null">
                #{c,jdbcType=VARCHAR},
            </if>
            <if test="d != null">
                #{d,jdbcType=VARCHAR},
            </if>
            <if test="ans != null">
                #{ans,jdbcType=VARCHAR},
            </if>
            <if test="creatperson != null">
                #{creatperson,jdbcType=VARCHAR},
            </if>
            <if test="choose != null">
                #{choose,jdbcType=VARCHAR},
            </if>
            <if test="time != null">
                #{time,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.htl.pojo.domain.ExampaperhistoryviewExample"
            resultType="java.lang.Long">
        select count(*) from exampaperhistoryview
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update exampaperhistoryview
        <set>
            <if test="record.eid != null">
                eid = #{record.eid,jdbcType=INTEGER},
            </if>
            <if test="record.qid != null">
                qid = #{record.qid,jdbcType=INTEGER},
            </if>
            <if test="record.uid != null">
                `uid` = #{record.uid,jdbcType=INTEGER},
            </if>
            <if test="record.exampapername != null">
                examPaperName = #{record.exampapername,jdbcType=VARCHAR},
            </if>
            <if test="record.question != null">
                question = #{record.question,jdbcType=VARCHAR},
            </if>
            <if test="record.typename != null">
                typename = #{record.typename,jdbcType=VARCHAR},
            </if>
            <if test="record.a != null">
                `A` = #{record.a,jdbcType=VARCHAR},
            </if>
            <if test="record.b != null">
                B = #{record.b,jdbcType=VARCHAR},
            </if>
            <if test="record.c != null">
                `C` = #{record.c,jdbcType=VARCHAR},
            </if>
            <if test="record.d != null">
                D = #{record.d,jdbcType=VARCHAR},
            </if>
            <if test="record.ans != null">
                ans = #{record.ans,jdbcType=VARCHAR},
            </if>
            <if test="record.creatperson != null">
                creatperson = #{record.creatperson,jdbcType=VARCHAR},
            </if>
            <if test="record.choose != null">
                choose = #{record.choose,jdbcType=VARCHAR},
            </if>
            <if test="record.time != null">
                `time` = #{record.time,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update exampaperhistoryview
        set eid = #{record.eid,jdbcType=INTEGER},
        qid = #{record.qid,jdbcType=INTEGER},
        `uid` = #{record.uid,jdbcType=INTEGER},
        examPaperName = #{record.exampapername,jdbcType=VARCHAR},
        question = #{record.question,jdbcType=VARCHAR},
        typename = #{record.typename,jdbcType=VARCHAR},
        `A` = #{record.a,jdbcType=VARCHAR},
        B = #{record.b,jdbcType=VARCHAR},
        `C` = #{record.c,jdbcType=VARCHAR},
        D = #{record.d,jdbcType=VARCHAR},
        ans = #{record.ans,jdbcType=VARCHAR},
        creatperson = #{record.creatperson,jdbcType=VARCHAR},
        choose = #{record.choose,jdbcType=VARCHAR},
        `time` = #{record.time,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
</mapper>